%--------------------------------------------------------------------------------------------------------------------------------%
% Code and text for "A mechanistic model to compare the importance of interrelated population measures: population size, population density and colony size"
% by Tim CD Lucas, Hilde Herbots and Kate Jones
% See code chunk "settings" to see important switches (run large simulations or not etc.)
%
%---------------------------------------------------------------------------------------------------------------------------------%


\documentclass[a4paper,10pt,reqno,oneside]{amsart}

\usepackage[T1]{fontenc}


% line numbers
\usepackage[running, displaymath, mathlines]{lineno} % running vs pagewise 
\linenumbers
\linespread{1.5}

\usepackage[marginratio=1:1,height=584pt,margin=1in,tmargin=1in,footskip=2em]{geometry}

\usepackage{fancyhdr} 
\fancyhf{}
\cfoot{\thepage}
\pagestyle{fancy}    




\renewcommand\thesubsection{\textbf{(\alph{subsection})}}


% ------------------------------------------ %
%       References preamble                  %                  
% ------------------------------------------ %

\usepackage[
  backend=biber, 
  bibencoding=utf8, 
  useprefix=true,%
	uniquename=false, 
  uniquelist=false, %
	style=numeric-comp, 
  sorting=none,
  firstinits=true, 
	maxcitenames=2, 
  terseinits=true,
  maxbibnames=10
]{biblatex}

\renewcommand{\cite}[1]{\parencite{#1}}

\renewcommand*{\multicitedelim}{\addcomma}

% no "In: "
\renewbibmacro{in:}{%
  \ifentrytype{article}{}{\printtext{\bibstring{in}\intitlepunct}}}


\addbibresource{epilit.bib}
% This has to go below fontenc for some reason


% ------------------------------------------ %
%       End References preamble              %                  
% ------------------------------------------ %




\usepackage{graphicx}

\usepackage[width = 0.5\textwidth]{caption}
\usepackage{verbatim, graphicx, xcomment, microtype, array}
%\usepackage{amsmath}




\usepackage{booktabs}
\PassOptionsToPackage{hyphens}{url}
\usepackage[pdftex,hidelinks]{hyperref}


\begin{document}






%%begin.rcode settings, echo = FALSE, cache = FALSE, message = FALSE, results = 'hide'

####################################
### Important simulation options ###
####################################


# Compilation options
# Run simulations? This will take many hours
runAllSims <- FALSE

# Save raw simulation output
# This will take ~10GB or so.
# If false, summary statistics of each simulation are saved instead.
saveData <- FALSE

# Display extra figures in final documents?
extraFigs <- 'hide'


# How many cores do you want to use to run simulations?
nCores <- 8

##########################
### End options        ###
##########################


opts_chunk$set(cache.path = '.abundanceCache/', fig.path = 'figure/')

source('misc/KnitrOptions.R')


%%end.rcode


%%begin.rcode ggplot, cache = FALSE

source('misc/theme_tcdl.R')
theme_set(theme_grey() + theme_pub)


%%end.rcode

%%begin.rcode libs, cache = FALSE, result = FALSE

# My package. For running and analysing Epidemiological sims.
#   https://github.com/timcdlucas/metapopepi
library(MetapopEpi)

# Data manipulations
library(reshape2)
library(dplyr)

# Calc confidence intervals (could probably do with broom instead now.)
library(binom)

# To tidy up stats models/tests
library(broom)


# Run simulations in parallel
library(parallel)


# plotting
library(ggplot2)
library(palettetown)
# Get nice fonts in base graphics
library(showtext)

library(assertthat)

%%end.rcode


\title[Lucas et al. A comparison of the importance of population measures on pathogen richness]{A mechanistic model to compare the importance of interrelated population measures on pathogen richness: host population size, density and colony size}
\author[Tim C.D. Lucas, Hilde M. Wilkinson-Herbots and Kate E. Jones]{Tim C.D. Lucas\textsuperscript{1$\ast\dagger$}, Hilde M. Wilkinson-Herbots\textsuperscript{2} and Kate E. Jones\textsuperscript{3$\ast$}}
\date{}

\maketitle
%\tableofcontents




%\subsection*{Addresses:}{\ }\\
\noindent\textsuperscript{1}Centre for Biodiversity and Environment Research, Department of Genetics, Evolution and Environment, University College London, Gower Street, London, WC1E 6BT, United Kingdom. 0000-0003-4694-8107\\
\textsuperscript{2}Department of Statistical Science, University College London, Gower Street, London, WC1E 6BT, United Kingdom\\ 
\textsuperscript{3}Centre for Biodiversity and Environment Research, Department of Genetics, Evolution and Environment, University College London, Gower Street, London, WC1E 6BT, United Kingdom and Institute of Zoology, Zoological Society of London, Regent's Park, London, NW1 4RY, United Kingdon. 0000-0001-5231-3293\\ 
$^\dagger$Current address:  Oxford Big Data Institute, Li Ka Shing Centre for Health Information and Discovery, University of Oxford, Oxford, United Kingdom. \\
\vspace{3mm}
\noindent \textsuperscript{$\ast$}Corresponding authors: Tim C.D. Lucas: timcdlucas@gmail.com, Kate E. Jones: kate.e.jones@ucl.ac.uk



\subsection*{Word count:} 4647
\subsection*{Running header:} A comparison of the importance of population measures on pathogen richness

\clearpage

\section*{Abstract}

Zoonotic diseases are an increasingly important source of human infectious diseases, and reservoir host pathogen richness is a critical driver of spill-over risk. 
Host population-level traits such as population size and density, geographic range size and population structure have all been shown to be important determinants of host pathogen richness. 
However, empirically identifying the independent influences of these traits has proven difficult as many of these traits directly depend on each other. 
Here we develop a mechanistic metapopulation susceptible-infected-recovered model to identify the independent population-level trait influences on the ability of a newly evolved pathogen to invade and persist in host populations in the presence of an endemic pathogen, using a case study of bats; a highly social mammalian order. 
We show that larger population and group sizes had a greater influence on the chances of pathogen invasion and persistence than increased population densities (and therefore decreased population structure) and number of groups. 
As anthropogenic change affects these traits to different extents, this increased understanding of how traits independently determine pathogen richness will aid in predicting future zoonotic spill-over risk.


\subsection*{Keywords} %max keywords/phrase 3--6 - current 3
Pathogen competition, zoonotic disease, metapopulations, host pathogen richness, bats, emerging infectious disease



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\section{Introduction}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%\tmpsection{General Intro}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% A basic introduction to the field,
% comprehensible to a scientist in any discipline.

%1. Zoonotics important - determinants of pathogen richness important



% Pop-level is important as shown by corr studies.
% Sometimes the definitions are difficults
% While density been studied, population abundance has not despite being a fundementall characteristic.


Zoonotic diseases are a major source of human infectious diseases \cite{jones2008global, woolhouse2006host, taylor2001risk}. 
The chance that a new zoonotic disease will come from a particular reservoir-host depends on a number of factors including the number of pathogen species it carries \cite{wolfe2000deforestation}. 
Much attention has been devoted to comparatively assessing the factors that are associated with high or low pathogen richness in wild animal species \cite{poulin2000diversity, kamiya2014determines, luis2013comparison}. 
Many empirical comparative studies have examined morphological or life history traits \cite{kamiya2014determines, luis2013comparison}, but factors related to reservoir-host population biology are also expected to affect disease dynamics and therefore affect pathogen richness. 
Population-level traits that have already been shown to correlate with pathogen richness include: increased host density \cite{morand1998density, kamiya2014determines, lindenfors2007parasite, nunn2003comparative, arneberg2002host}, increased range size \cite{lindenfors2007parasite, nunn2003comparative, turmelle2009correlates, huang2015parasite, kamiya2014determines} and increased population structure \cite{maganga2014bat, turmelle2009correlates}.
Other traits such as group size have been well studied but results have been equivocal \cite{vitone2004body, gay2014parasite, ezenwa2006host, rifkin2012animals, nunn2003comparative}.
However, some important population-level traits, such as population size, have not been included in comparative analyses despite it being the natural way to describe epidemiological populations \cite{begon2002clarification}.

%4. then talk about the limitations of taking a comparative approach 

Collinearity between explanatory variables is a common problem in correlative studies.
However, this issue is exacerbated when there are clear, causal relationships between explanatory variables.
There are two particularly clear relationships between the population-level factors associated with pathogen richness.
Firstly, host density, $d$, host population size, $N$, and geographic range size, $a$, are, by definition, linked by $d = N / a$ (see Table~S1 for all parameters used).
Furthermore, the relationship $N \propto a$ has broad empirical support \cite{blackburn2006variations, borregaard2010causality}.
Secondly, host population size can be decomposed into two components, the number of groups, $m$, and the average size of a group, $n$, with $N = mn$.
%While less clear, geographic range size and host population structure are also related.
Therefore, correlative comparative studies will be especially poor at identifying which of these factors are closely correlated with pathogen richness.
This lack of discriminatory power is particularly important with respect to global change and its effects on zoonotic disease emergence.
Population-level factors such as host population size and geographic range size, although interrelated, will respond differently to global change and the response will be species specific.
Some host species may suffer large range contractions, and therefore large falls in population size, while their density remains fairly constant \cite{thomas2004extinction}.
Other host species might retain their distribution but have a depressed population density \cite{craigie2010large}.
Therefore, only by knowing which of these interrelated factors controls pathogen richness will we be able to predict future changes in pathogen richness.


%The alternative is mechanistic models.
Mechanistic models provide one method for comparing the importance of intrinsically related factors and can provide a deeper understanding of the system than correlative approaches.
Theoretical studies have established that a number of host population factors are important for epidemiological dynamics generally and for the maintenance of pathogen richness specifically.
Host density and structure are well established as having central roles in pathogen dynamics \cite{colizza2007invasion, barthelemy2010fluctuation, wu2013threshold, may1979population, anderson1979population, webber2016sociality}.
However, it has been noted that host population size is a more natural measure than population density and that particularly in comparative settings, population size should be preferred \cite{begon2002clarification}.
Host group size is also known to strongly affect disease dynamics with disease spreading more quickly through populations made up of larger groups \cite{colizza2007invasion}.
Fewer studies specifically study how these factors affect pathogen coexistence.
A number of studies find that increased host population structure can promote pathogen coexistence \cite{qiu2013vector, allen2004sis, nunes2006localized}.
While these studies have examined whether these population-level factors can promote pathogen richness, none have attempted to distinguish which might be the most important.


%7. what you are going to do that is new (ie tease apart these interdependencies) - using case study on bats (and why this is a good group to ask this particular question on)


There is great need for mechanistic models that try to disentangle the interplay between population-level factors including host density, population size, range size, population structure, group size and the number of groups.
Here, we have used multipathogen, metapopulation models to individually vary these host population parameters.
The metapopulations were parameterised to broadly mimic wild bat populations.
We used bats as a case study as the size of bat groups (colonies) is very variable and bat colonies are often very stable \cite{kerth2011bats, mccracken1981social}.
Furthermore, bats are particularly relevant in the context of zoonotic disease as they are thought to be reservoirs for a number of important, recent outbreaks \cite{calisher2006bats, li2005bats}.
We examined how the interrelated population factors affect the ability of a newly evolved pathogen to invade and persist in a population in the presence of strong competition from an endemic pathogen strain.
We used these simulations to test two specific hypotheses.
First, we tested whether host population size or density more strongly promotes the invasion of a new pathogen.
Secondly, we tested whether the invasion of a new pathogen is more strongly promoted by colony size or the number of colonies.
We found that population size has a much stronger affect on the invasion of a new pathogen than host density and that increasing population size by increasing group size promotes pathogen invasion much more than increasing population size by increasing the number of groups.




%%begin.rcode SimSetup

  # These apply to both topo and disp sims. And probably should apply to extinction sims if I include them.
  # How long should the simulation last?
  nEvent <- 1.4e6
  # When should the invading pathogen be added.
  invadeT <- 6e5

  # Total time 
  TotalTime <- 75
  
  # Sims per parameter set.
  each <- 100
  
  # How often should the population be sampled. Only sampled populations are saved.
  sample <- 1000

  source('abundance-density-functions-tl.R')

%%end.rcode




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Constant density size. 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%begin.rcode DensSimsFuncs

  #################################
  # Density sim definitions       #
  #################################

  # Keep density constant. Alter population size via colonySize

  # How many simulations to run?
  nDensSims <- 15 * each

  # Parameters for constant density
  #   Area and meanColonySize are the actal input arguments
  pop <- rep(c(2000, 4000, 8000, 16000, 32000), each = 3 * each)
  colonySize <- pop / 20
  
  # make a copy of colonySize for use in text.
  dep1 <- unique(colonySize)

  area <- pop / 0.8
  side <- sqrt(area)

  tran <- rep(c(0.1, 0.2, 0.3), times = 5 * each)

%%end.rcode

%%begin.rcode runDensSim, eval = runAllSims, cache = TRUE

# Create and set seed (seed object is used to set seed in each separate simulation.'
seed <- 1
set.seed(seed)

# If we want to save the data, make a directory for it.
if(saveData){
  dir.create('Data/fullsimoutput/')
}

# Run sims.
z <- mclapply(1:nDensSims, . %>% fullSim1, mc.preschedule = FALSE, mc.cores = nCores)

z <- do.call(rbind, z)

# Save summary data.
write.csv(z, file = 'Data/DensSims.csv')

%%end.rcode


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Constant density 2. 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%begin.rcode Dens2SimsFuncs

  #################################
  # Density2 sim definitions      #
  #################################

  # Keep density constant. Alter population size via colonyNumber


  # How many simulations to run?
  nDens2Sims <- 15 * each

  # Parameters for constant density
  #   Area and meanColonySize are the actal input arguments
  pop <- rep(c(2000, 4000, 8000, 16000, 32000), each = 3 * each)
  colonySize <- 400
  colonyNumber <- pop / colonySize
  
  # make a copy of colony number for use in text
  dep2 <- unique(colonyNumber )

  area <- pop / 0.8
  side <- sqrt(area)




  tran <- rep(c(0.1, 0.2, 0.3), times = 5 * each)

%%end.rcode

%%begin.rcode runDens2Sim, eval = runAllSims, cache = TRUE

# Create and set seed (seed object is used to set seed in each separate simulation.'
seed <- 2
set.seed(seed)


# Run sims.
z <- mclapply(1:nDens2Sims, . %>% fullSim2, mc.preschedule = FALSE, mc.cores = nCores)

z <- do.call(rbind, z)

# Save summary data.
write.csv(z, file = 'Data/Dens2Sims.csv')

%%end.rcode




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Constant Population. 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%begin.rcode PopSimsFuncs

  #################################
  # Population sim definitions    #
  #################################

  # Keep population constant. Alter density by area

  # How many simulations to run?
  nPopSims <- 15 * each

  # Parameters for constant density
  #   Area and meanColonySize are the actal input arguments
  pop <- 8000

  colonySize <- pop / 20

  area <- rep(c(40000, 20000, 10000, 5000, 2500), each = 3 * each)
  side <- sqrt(area)
  
  
  # save density values for use in text.
  dep3 <- c(40000, 20000, 10000, 5000, 2500)
  depDens <- pop / dep3

  tran <- rep(c(0.1, 0.2, 0.3), times = 5 * each)

%%end.rcode

%%begin.rcode runPopSim, eval = runAllSims, cache = TRUE

# Create and set seed (seed object is used to set seed in each separate simulation.'
seed <- 3
set.seed(seed)


# Run sims.
z <- mclapply(1:nPopSims, . %>% fullSim3, mc.preschedule = FALSE, mc.cores = nCores)

z <- do.call(rbind, z)

# Save summary data.
write.csv(z, file = 'Data/PopSims.csv')

%%end.rcode


%%begin.rcode colonyNetCaptions

colonyNetTitle <- 'Relationship between range size and metapopulation network structure'

colonyNetCapt <- '
The relationship between range size and metapopulation network structure.
Colonies are shown by circles.
Colonies that are close enough for animals to disperse between (i.e.\\  within 100 km of each other) are joined by a line.
Colonies are placed randomly in spaces of various sizes (grey dashed lines).
A and C) the default range size (10000 km\\textsuperscript{2}).
B and D) the largest range size (40000 km\\textsuperscript{2}).
A and B) the smallest number of colonies (five).
C and D) the default number of colonies (20).
The mean number of connections per subpopulation, $\\bar{k}$, is shown for each metapopulation.
'


%%end.rcode


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\section{Methods}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{figure}[t]
\centering
  \includegraphics[width=0.4\textwidth]{figure/SIRoption1}
  \caption[Schematic of the SIR model used]{
  Schematic of the SIR model used. 
  Individuals are in one of five classes, susceptible (orange, $S$), infected with Pathogen 1, Pathogen 2 or both (blue, $I_1, I_2, I_{12}$) or recovered and immune from further infection (green, $R$).
  Transitions between epidemiological classes occur as indicated by solid arrows and depend on transmission rate ($\beta$) and coinfection adjustment factor ($\alpha$).
  Births ($\Lambda$)  and deaths ($\mu$) are indicated by dashed arrows.
  %Parameter symbols for transitions are indicated.
  Note that individuals in $I_{12}$ move into $R$, not back to $I_1$ or $I_2$. 
  That is, recovery from one pathogen causes immediate recovery from the other pathogen.
  }
\label{f:sir}
\end{figure}

\subsection{Two pathogen SIR model}


We developed a multipathogen, susceptible-infected-recovered (SIR) compartment model.
We examined the ability of a second pathogen to invade and persist into a population given the presence of an identical, endemic pathogen.
Individuals were classed as susceptible, infected or recovered with immunity (Figure~\ref{f:sir}).
Susceptible individuals are counted in class $S$ (see Table~S1 for a list of symbols and values used).
There are three infected classes, $I_1$, $I_2$ and $I_{12}$, being individuals infected with Pathogen 1, Pathogen 2 or both, respectively.
Recovered individuals, $R$, are immune to both pathogens, even if they have only been infected with one (i.e.\ there is complete cross-immunity).
Furthermore, recovery from one pathogen moves an individual straight into the recovered class, even if the individual is infected with both pathogens (Figure~\ref{f:sir}).
This modelling choice allows the model to be easily expanded to include more than two pathogens, though this study is restricted to two pathogens.
The assumption of immediate recovery from all other diseases is likely to be reasonable \cite{munywoki2015influence}.
Any up-regulation of innate immune response will affect both pathogens equally.
Furthermore, as the pathogens are identical, any acquired immunity would also affect both pathogens equally.
The coinfection rate (the rate at which an infected individual is infected with a second pathogen) is adjusted compared to the infection rate by a factor $\alpha$.



It is necessary to include births and deaths as the SIR model without population dynamics has no endemic state.
Birth and death rates ($\Lambda$ and $\mu$) are set as being equal meaning the population does not systematically increase or decrease.
New born individuals enter the susceptible class.
Infection and coinfection were assumed to cause no extra mortality as for a number of viruses, bats show no clinical signs of infection \cite{halpin2011pteropid, deThoisy2016bioecological}.


The population is modelled as a metapopulation, being divided into a number of subpopulations (colonies).
This model is an intermediate level of complexity between fully-mixed populations and contact networks.
There is ample evidence that bat populations are structured to some extent.
This evidence comes from the existence of subspecies, measurements of genetic dissimilarity and ecological studies \cite{kerth2011bats, mccracken1981social, burns2014correlates, wilson2005mammal}.
Therefore a fully mixed population is a large oversimplification.
However, trying to study the contact network relies on detailed knowledge of individual behaviour which is rarely available.		
The metapopulation is modelled as a network with colonies being nodes and dispersal between colonies being indicated by edges (Figure~\ref{fig:colonyNetworkPlots}A--D).
Individuals within a colony interact randomly so that the colony is fully mixed.
Dispersal between colonies occurs at a rate $\xi$.
Individuals can only disperse to colonies connected to theirs by an edge in the network.
The rate of dispersal is not affected by the number of edges a colony has (known as the degree of the colony and denoted $k$).
Therefore, the dispersal rate from a colony $y$ with degree $k_y$ to colony $x$ is $\xi / k_y$.
Note this rate is not affected by the degree and size of colony $x$.
We examined the model using stochastic, continuous-time simulations which we implemented in \emph{R} \cite{R}.
The full details of the model are given in Supplementary Methods~S1.
The code is available as an \emph{R} package on GitHub \cite{metapopepi}.


\subsection{Deterministic model}
\label{s:determ}

We can get some initial insights into the behaviour of the system by examining a simplified, deterministic model with a single path.
If we first consider the endemic pathogen (Pathogen~1) we have a typical SIR model with equilibrium values $S^\ast = \frac{\mu + \gamma}{\beta}$ and $I_1^\ast = \frac{\beta \Lambda N}{\gamma + \mu}$.
When Pathogen 2 is introduced, its rate of change can be written as

\begin{align}
\frac{dI_2}{dt} = \beta S^\ast I_2 + \alpha\beta I_1^\ast I^2 - (\mu + \gamma)I_2  
\end{align}
which is greater than zero when $\frac{\alpha\beta\Lambda N}{\gamma + \mu} > 0$ or $\alpha R_0 >0$ (with $R_0$ being the basic repdroduction number and is equal for the two identical pathogens).
As $R_0$ is always greater than zero, this inequality holds as long as $\alpha$ is greater than zero.
That is, as long as cross-immunity is not complete, Pathogen 2 will always invade in this deterministic model. 

\subsection{Parameter selection}
\label{s:paramSelect}

The fixed parameters were chosen to roughly reflect realistic wild bat populations. 
The death rate $\mu$ was set as 0.05 per year giving a generation time of 20 years \cite{jones2009pantheria}.
The birth rate $\Lambda$ was set to be equal to $\mu$.
This yields a population that does not systematically increase or decrease.
However, the size of each colony changes as a random walk.
Given the length of the simulations, colonies were very unlikely to go extinct.
The recovery rate $\gamma$ was set to one, giving an average infection duration of one year. 
This is therefore a long lasting infection but not a chronic infection. 
It is very difficult to directly estimate infection durations in wild populations but it seems that these infections might sometimes be long lasting \cite{peel2012henipavirus, plowright2015ecological}.
However, other studies have found much shorter infectious periods \cite{amengual2007temporal}.
These shorter infections are not studied further here. 
The coinfection adjustment parameter, $\alpha$, was set to 0.1.
Therefore, an individual with a single infection is 90\% less likely to gain a second infection.
Given Section \ref{s:determ}, $\alpha = 0$ and $\alpha > 0$ are the two qualitatively different conditions.
The case where Pathogen 2 does not invade and spread ($\alpha = 0$) is unlikely to be important for pathogen richness so we chose a small, non-zero value for $\alpha$.
Dispersal was only allowed to occur between two colonies if they were within 100km of each other i.e.\ they were then counted as connected nodes in the metapopulation network.
The dispersal rate $\xi$ was set to 0.01 which yields 17\% of individuals dispersing in their lifetime.


\subsection{Population factors}

The effect of range size on disease dynamics occurred through changes in the metapopulation network.
The metapopulation network was created for each simulation by randomly placing colonies in a square space (Figure~\ref{fig:colonyNetworkPlots}A--D).
This square space was considered to be the species geographic range, the size of which was varied.
Range size was varied between \rinline{min(area)} and \rinline{max(area)} km\textsuperscript{2}.
This corresponds to square areas with sides of \rinline{sqrt(min(area))} to \rinline{sqrt(max(area))} km.
The number of connections each colony has is called its degree, $k$.
The mean degree, $\bar{k}$ is a measure of how well connected the metapopulation network is overall.
The metapopulation network was not necessarily connected (i.e.\ made up of a single connected component) as the network was created by randomly placing colonies and only connecting colonies within 100 km of each other.
To ensure connected metapopulation networks would have required repeatedly resampling of the colony locations until a connected metapopulation population occurred.
However, this would bias $\bar{k}$.
Therefore, it was considered preferential to keep the unconnected networks.
The threshold of 100 km was arbitrary but we aimed to maximise the range  of $\bar{k}$ (Figure~S1) while not having many simulations with networks that were unconnected.
Given this setup, populations with low densities had relatively unconnected metapopulation networks while high density populations had fully connected networks.

\subsection{Experimental setup}

We let two identical pathogens compete: an endemic pathogen (Pathogen 1) and an invading pathogen (Pathogen 2).
We used persistence (coded as 1) or extinction (coded as 0) of Pathogen 2 as a binomial response variable.
We tested whether host population size is more important than host density and then tested whether colony size or the number of colonies is the more important component of population size.
We used three values of the transmission rate $\beta$,  0.1, 0.2 and 0.3.
This yields very high values of $R_0$ which was required so that a reasonable number of simulations experienced invasion of Pathogen 2.
All simulations were run under all three transmission rates.


In each simulation the host population was seeded with 20 individuals infected with Pathogen 1 in each colony. 
Pathogen 1 was then allowed to spread and reach equilibrium. 
After \rinline{invadeT} events, five host individuals infected with Pathogen 2 were added to one randomly selected colony. 
The simulation was then run until a further \rinline{TotalTime} years had elapsed.
The invasion of Pathogen 2 was considered successful if any individuals infected with Pathogen 2 remained at the end of the simulation.


%%begin.rcode colonyNetworkPlots, fig.height = 5, fig.cap = colonyNetCapt, fig.scap = colonyNetTitle, out.width = '0.8\\textwidth', fig.showtext = TRUE


set.seed(3)

  #   Area and meanColonySize are the actal input arguments
  pop <- c(2000, 4000, 8000, 16000, 32000)
  colonySize <- 400
  colonyNumber <- pop / colonySize

  area <- pop / 0.8
  side <- sqrt(area)


# Make the population.
p1 <- makePop(space = side[3], 
             transmission = 0.1, 
             meanColonySize = colonySize, 
             nColonies = colonyNumber[1], 
             model = 'SIR', 
             events = 20,
             sample = 2,
             maxDistance = 100)
k1 <- sum(p1$adjacency != 0 )/p1$parameters['nColonies']


# Make the population.
p2 <- makePop(space = side[5], 
             transmission = 0.1, 
             meanColonySize = colonySize, 
             nColonies = colonyNumber[3], 
             model = 'SIR', 
             events = 20,
             sample = 2,
             maxDistance = 100)
k2 <- sum(p2$adjacency != 0 )/p2$parameters['nColonies']

# Make the population.
p3 <- makePop(space = side[3], 
             transmission = 0.1, 
             meanColonySize = colonySize, 
             nColonies = colonyNumber[3], 
             model = 'SIR', 
             events = 20,
             sample = 2,
             maxDistance = 100)
k3 <- sum(p3$adjacency != 0 )/p3$parameters['nColonies']

# Make the population.
p4 <- makePop(space = side[5], 
             transmission = 0.1, 
             meanColonySize = colonySize, 
             nColonies = colonyNumber[1], 
             model = 'SIR', 
             events = 20,
             sample = 2,
             maxDistance = 100)
k4 <- sum(p4$adjacency != 0 )/p4$parameters['nColonies']


labSz <- 1.1
bigy <- 8
bigx <- 6
titleSz <- 3
axSz <- 2
points <- 0.35

par(mfrow = c(2,2))


plotColonyNet(p1, area = side[5], cex = points, mar = c(bigx, bigy, 2, 2), alpha = 1, lowgrey = 0.2, highgrey = 0.7, col = pokepal('Charizard')[c(4, 14)])
axis(2, col = 'grey', cex.axis = axSz, at = c(0, 50, 100, 150, 200), labels = c('0', '', '100', '', '200'), col.axis = '#a4a4a4', family = 'sans', font = 2)
axis(1, col = 'grey', labels = FALSE)
title(main = bquote(italic(bar(k)) ~ '='~ .(k1)), cex.main = titleSz, family = 'sans',  line = -1.18)
mtext(side = 2,  line = 4, text = 'Longitude', cex = labSz, family = 'sans', col  =  "#8B8B8B")
lines(x = c(0, 100, 100), y = c(100, 100, 0), lty = 2, col = 'grey')
mtext(side = 3,  line = -0.3, text = 'A)', cex = 1, family = 'sans', at = -62)

plotColonyNet(p4, area = side[5], cex = points, mar = c(bigx, 6, 2, 2), alpha = 1, lowgrey = 0.2, highgrey = 0.7, col = pokepal('Charizard')[c(4, 14)])
axis(2, col = 'grey', labels = FALSE)
axis(1, col = 'grey', labels = FALSE)
title(main = bquote(italic(bar(k)) ~ '='~ .(k4)), cex.main = titleSz, family = 'sans',  line = -1.18)
mtext(side = 3,  line = -0.3, text = 'B)', cex = 1, family = 'sans', at = -22)

plotColonyNet(p3, area = side[5], cex = points, mar = c(bigx, bigy, 0, 2), alpha = 1, lowgrey = 0.2, highgrey = 0.7, col = pokepal('Charizard')[c(4, 14)])
axis(2, col = 'grey', cex.axis = axSz, col.axis = '#a4a4a4', at = c(0, 50, 100, 150, 200), labels = c('0', '', '100', '', '200'), family = 'sans', font = 2)
axis(1, col = 'grey', labels = FALSE)
axis(1, col = 'grey', cex.axis = axSz, col.axis = '#a4a4a4', at = c(0, 100, 200), labels = c('0', '100', '200'), family = 'sans', font = 2, line = 0.5, lwd = 0)
title(main = bquote(italic(bar(k)) ~ '='~ .(k3)), cex.main = titleSz, family = 'sans',  line = -1.18)
mtext(side = 2,  line = 4, text = 'Longitude', cex = labSz, family = 'sans', col  =  "#8B8B8B")
mtext(side = 1,  line = 4.4, text = 'Latitude', cex = labSz, family = 'sans', col  =  "#8B8B8B")
lines(x = c(0, 100, 100), y = c(100, 100, 0), lty = 2, col = 'grey')
mtext(side = 3,  line = -0.3, text = 'C)', cex = 1, family = 'sans', at = -62)

plotColonyNet(p2, area = side[5], cex = points, mar = c(bigx, 6, 0, 2), alpha = 1, lowgrey = 0.2, highgrey = 0.7, col = pokepal('Charizard')[c(4, 14)])
axis(1, col = 'grey', labels = FALSE)
axis(1, col = 'grey', cex.axis = axSz, col.axis = '#a4a4a4', at = c(0, 100, 200), labels = c('0', '100', '200'), family = 'sans', font = 2, line = 0.5, lwd = 0)
axis(2, col = 'grey', labels = FALSE)
title(main = bquote(italic(bar(k)) ~ '='~ .(k2)), cex.main = titleSz, family = 'sans',  line = -1.18)
mtext(side = 1,  line = 4.4, text = 'Latitude', cex = labSz, family = 'sans', col  =  "#8B8B8B")
mtext(side = 3,  line = -0.3, text = 'D)', cex = 1, family = 'sans', at = -22)




%%end.rcode




%%begin.rcode calcMeans
# Constant density, altered colony size
# Need to remove rows with errors to auto find classes of columns
dens1text <- readLines('Data/DensSims.csv')
rmerrors <- dens1text[!grepl('Error in', dens1text)]
rmerrors <- rmerrors[nchar(rmerrors) > 3]
dens1 <- read.csv(text = rmerrors) %>% 
           dplyr::select(-X) 

dens1Means <- dens1 %>%
                dplyr::filter(nExtantDis > 0) %>%
                group_by(transmission, colonySize, colonyNumber) %>%
                summarise(success = sum(nExtantDis == 2), sampleSize = n(), pop = mean(as.numeric(as.character(pop))))


dens1Means <- dens1Means %>% as.data.frame %>%
                cbind(., vary = 'colonySize', binom.confint(.$success, .$sampleSize, conf.level = 0.95, methods = "exact"))

# fit glms to each transmission value

dens1Model <- dens1 %>%
               dplyr::filter(nExtantDis > 0) %>%
               mutate(invasion = as.numeric(nExtantDis == 2)) %>%
               group_by(transmission) %>%
               do(fit = glm(invasion ~ pop, data = ., family = 'binomial')) %>%
               mutate(vary = 'colonySize')


# Constant density, altered colony number

dens2 <- read.csv('Data/Dens2Sims.csv') %>% dplyr::select(-X) %>% as.data.frame

dens2Means <- dens2 %>%
                dplyr::filter(nExtantDis > 0) %>%
                group_by(transmission, colonySize, colonyNumber) %>%
                summarise(success = sum(nExtantDis == 2), sampleSize = n(), pop = mean(as.numeric(as.character(pop))))


dens2Means <- dens2Means %>% as.data.frame %>%
                cbind(., vary = 'colonyNumber',  binom.confint(.$success, .$sampleSize, conf.level = 0.95, methods = "exact"))

# Fit glms to each transmission value
dens2Model <- dens2 %>%
               dplyr::filter(nExtantDis > 0) %>%
               mutate(invasion = as.numeric(nExtantDis == 2)) %>%
               group_by(transmission) %>%
               do(fit = glm(invasion ~ pop, data = ., family = 'binomial')) %>%
               mutate(vary = 'colonyNumber')

# Constant population, altered area

pop <- read.csv('Data/PopSims.csv') %>% dplyr::select(-X) %>% as.data.frame

popMeans <- pop %>%
                dplyr::filter(nExtantDis > 0) %>%
                group_by(transmission, area) %>%
                summarise(success = sum(nExtantDis == 2), sampleSize = n())


popMeans <- popMeans %>% as.data.frame %>%
                cbind(., binom.confint(.$success, .$sampleSize, conf.level = 0.95, methods = "exact"))

#popModels <- pop %>%
#               mutate(invasion = as.numeric(nExtantDis == 2)) %>%
#               group_by(transmission) %>%
#               do(glm(.$invasion ~ .$dens, family = 'binomial') %>% tidy)


# fit glms to each transmission value
popModel <- pop %>%
               dplyr::filter(nExtantDis > 0) %>%
               mutate(invasion = as.numeric(nExtantDis == 2)) %>%
               group_by(transmission) %>%
               do(fit = glm(invasion ~ dens, data = ., family = binomial(link = logit))) %>%
               mutate(vary = 'Density')



%%end.rcode




%%begin.rcode plotKcapt

plotKcapt <- '
Change in average metapopulation network degree ($\\bar{k}$) with increasing range size. 
Bars show the median, boxes show the interquartile range, vertical lines show the range and grey dots indicate outlier values.
Notches indicate the 95\\% confidence interval of the median.
All simulations had 20 groups, meaning 19 is the maximum value of $\\bar{k}$.
'

plotKtitle <- 'Change in average network degree with increasing range size'


%%begin.rcode plotK, fig.cap = plotKcapt, fig.scap = plotKtitle, out.width = '0.4\\textwidth', cache = FALSE, plot.height = 2.3, fig.show = 'hide'

ggplot(dens1, aes(x = factor(area), y = meanK, colour = 'a', fill = 'a')) +
  geom_boxplot(outlier.size = 1, size = 0.3, outlier.colour = grey(0.3), 
    notch = TRUE, width = 0.4, notchwidth = 0.6) +
  scale_colour_manual(values = pokepal('vileplume')[4]) +
  scale_fill_manual(values = pokepal('vileplume')[7]) +
  stat_summary(geom = "crossbar", width = 0.2, fatten = 2, 
    fun.data = function(x){ return(c(y = median(x), ymin = median(x), ymax = median(x))) }) +
  theme(legend.position = 'none', panel.grid.major.x = element_blank()) + 
  scale_x_discrete(labels = c('2500', '5000', '10000', '20000', '40000')) +
  xlab(expression(paste('Area ', (km^2)))) +
  ylab(expression(paste('Mean degree, ', italic(bar(k))))) +
  ylim(0, 20)


%%end.rcode


Three sets of simulations were run.
This set of three simulations was used to compare two pairs of population factors: \emph{i}) population size and host density, \emph{ii}) colony size and the number of groups.
The population parameters that were directly varied were colony size, the number of groups and range size.
In each case these parameters were assigned their default value multiplied by 0.25, 0.5, 1, 2 and 4.
The default colony size was 400, the default number of groups was 20 and the default range size was 10000 km\textsuperscript{2}.


In the first set of simulations, host density was varied by keeping population constant while varying range size.
Colony size was kept at a constant value of 400 while the number of groups was fixed at 20 giving a population size of 8000.
The values of range size used were 40000, 20000, 10000, 5000 and \rinline{dep3[5]} km\textsuperscript{2} which gave density values of \rinline{depDens[-5]} and \rinline{depDens[5]} animals per km\textsuperscript{2}.

In the second set of simulations, population size was varied by changing colony size while the number of groups was kept constant.
To keep host density constant, range size was reduced as population size increased.
The values of colony size used were 100, 200, 400, 800 and 600 while range size was set to 40000, 20000, 10000, 5000 and \rinline{dep3[5]} km\textsuperscript{2}.
This gave population size values of 2000, 4000, 8000, 16000 and 32000 while host density remained at 0.8 hosts per km\textsuperscript{2}.

In the third set of simulations, population size was varied by changing the number of groups while colony size was kept constant.
Again, to keep host density constant, range size was reduced as population size increased.
The numbers of groups used were 5, 10, 20, 40 and 80 while range size was set to 40000, 20000, 10000, 5000 and \rinline{dep3[5]} km\textsuperscript{2}.
Again, this gave population size values of 2000, 4000, 8000, 16000 and 32000 while host density remained at 0.8 hosts per km\textsuperscript{2}.



To compare colony size and the number of groups, only the second and third set of simulations above were used.
However, colony size and the number of groups were directly used as independent variables instead of using the derived values for host population size or density.
It can be seen that population density and range size are equivalent in the two sets of simulations.
Therefore, the only difference between these two sets of simulations is the factor used to increase population size: this factor being either colony size or the number of groups.




%%begin.rcode predictModels

# Predict separate glms for plotting

popPred <- seq(min(dens2$pop), max(dens2$pop), length.out = 200)

densPreds <- rbind(dens1Model, dens2Model) %>%
               apply(., 1, 
                 function(m) predict(m['fit'][[1]], newdata = data.frame(pop = popPred), type = 'response') %>%
                               data.frame(pred = ., pop = popPred, transmission = m$transmission, vary = m$vary)
               ) %>%
               do.call(rbind, .)


%%end.rcode




%%begin.rcode valueChangeMeansCapt

valueChangeMeansCapt <- '
Comparison of the effect of colony size, number of groups and host density on probability of invasion.
The $x$-axis shows the change ($\\times$0.25, 0.5, 1, 2 and $4$) in the each of these factors  relative to the default value.
Default values are: colony number = 20, colony size = 400 and density = 0.8 animals per km\\textsuperscript{2}.
Red lines: population size is altered by changing colony number.
Blue lines: population size is altered by changing colony size.
Yellow lines: population density is altered by changing range size.
Each point is the mean of 100 simulations and bars are 95\\% confidence intervals.
Curves are simple logistic regression fits for each independent variable.
Relationships are shown separately for each transmission value, $\\beta$.
'

valueChangeMeansTitle <- 'Comparison of the effect of colony size, number of groups and host density on probability of invasion'

%%end.rcode

%%begin.rcode plotValueChangeMeans, fig.cap = valueChangeMeansCapt, fig.scap = valueChangeMeansTitle, out.width = '0.4\\textwidth', cache = FALSE, fig.height =  5

# Convert to percentage change in density, colonysize or colony number.

d <- rbind(popMeans %>% 
             mutate(ValueChange = as.numeric(as.character(area))/median(as.numeric(as.character(area))), vary = 'Density') %>%
             dplyr::select(ValueChange, transmission, mean, lower, upper, vary),
           dens1Means %>% 
             mutate(ValueChange = as.numeric(as.character(colonySize))/median(as.numeric(as.character(colonySize))), vary = 'colonySize') %>%
             dplyr::select(ValueChange, transmission, mean, lower, upper, vary),
           dens2Means %>% 
             mutate(ValueChange = as.numeric(as.character(colonyNumber))/median(as.numeric(as.character(colonyNumber))), vary = 'colonyNumber') %>%
             dplyr::select(ValueChange, transmission, mean, lower, upper, vary)
     )

# Refit all glms
#   First convert all raw data to percentage change, then fit.


percChange <- rbind(pop %>% 
                      mutate(ValueChange = as.numeric(as.character(area))/median(as.numeric(as.character(area))), 
                             invasion = as.numeric(nExtantDis == 2),
                             vary = 'Density') %>%
                      filter(nExtantDis > 0) %>%
                      dplyr::select(ValueChange, transmission, invasion, vary),
                    dens1 %>% 
                      mutate(ValueChange = as.numeric(as.character(colonySize))/median(as.numeric(as.character(colonySize))), 
                             invasion = as.numeric(nExtantDis == 2),
                             vary = 'colonySize') %>%
                      filter(nExtantDis > 0) %>%
                      dplyr::select(ValueChange, transmission, invasion, vary),
                    dens2 %>% 
                      mutate(ValueChange = as.numeric(as.character(colonyNumber))/median(as.numeric(as.character(colonyNumber))), 
                             invasion = as.numeric(nExtantDis == 2),
                             vary = 'colonyNumber') %>%
                      filter(nExtantDis > 0) %>%
                      dplyr::select(ValueChange, transmission, invasion, vary)
               )

# Fit glms to value change data
percChangeModels <- percChange %>%
                      group_by(transmission, vary) %>%
                      do(fit = glm(invasion ~ ValueChange, data = ., family = binomial(link = logit)))

# Predict from glms for plotting

percChangeNew <- seq(min(percChange$ValueChange), max(percChange$ValueChange), length.out = 200)

percChangePreds <- percChangeModels %>%
                       apply(., 1, 
                     function(m) predict(m['fit'][[1]], newdata = data.frame(ValueChange = percChangeNew), type = 'response') %>%
                                   data.frame(pred = ., ValueChange = percChangeNew, transmission = m$transmission, vary = m$vary)
                   ) %>%
                   do.call(rbind, .)


d$transmission <- factor(d$transmission, labels = c('beta == 0.1', '0.2', '0.3'))
percChangePreds$transmission <- factor(percChangePreds$transmission, labels = c('beta == 0.1', '0.2', '0.3'))

ggplot(d, aes(x = ValueChange, y = mean, colour = vary)) +
  geom_point() +
  geom_line(data = percChangePreds, aes(x = ValueChange, y = pred, colour = vary)) +
  geom_point() +
  geom_errorbar(aes(ymin = lower, ymax = upper),
              width = .01) +
  ylab('Prop. Invasions') +
  xlab('Amount Varied') +
  ylim(0, 1) +
  scale_colour_poke(name = "Focal Pop. Factor", 
                    labels = c( 'Pop. Size', 'Pop. Size', 'Host Density'), 
                    pokemon = 'Swampert',
                    spread = 3) +
  scale_y_continuous(breaks = c(0, 0.5, 1), labels = c('0.0', '0.5', '1.0')) +
  scale_x_continuous(breaks = c(0.25, 0.5, 1, 2, 4), 
                     labels = c(0.25, 0.5, 1, 2, 4), 
                     trans = 'log10') +
  facet_grid(transmission ~ ., labeller = label_parsed) +
  theme(legend.position = 'bottom')


%%end.rcode



%%begin.rcode statTests 


combDensModel <- rbind(dens1, dens2) %>% 
                   mutate(invasion = nExtantDis == 2 ) %>%
                   group_by(transmission) %>% 
                   mutate(colonySize = scale(colonySize), 
                          colonyNumber = scale(colonyNumber)) %>% 
                   do(glm(invasion ~ colonySize + colonyNumber, data = ., family = binomial) %>% tidy)


combModel <- rbind(dens1, dens2, pop) %>% 
               mutate(invasion = nExtantDis == 2 ) %>%
               group_by(transmission) %>% 
               mutate(colonySize = scale(colonySize), 
                      colonyNumber = scale(colonyNumber), 
                      area = scale(area)) %>% 
               do(glm(invasion ~  colonySize + colonyNumber + area, data = ., family = binomial) %>% tidy)

combModel <- rbind(dens1, dens2, pop) %>% 
               mutate(invasion = nExtantDis == 2 ) %>%
               group_by(transmission) %>% 
               mutate(colonySize = scale(colonySize), 
                      colonyNumber = scale(colonyNumber), 
                      area = scale(area)) %>% 
               do(glm(invasion ~ colonySize + colonyNumber + area, data = ., family = binomial) %>% confint_tidy) %>%
               ungroup %>%
               dplyr::select(conf.low, conf.high) %>%
               bind_cols(combModel, .)

%%end.rcode

%%begin.rcode transMeansCapt

transMeansCapt <- '
Comparison of the effect of host population size on probability of invasion when population size is altered by changing colony size or colony number.
Relationships are shown separately for each transmission value, $\\beta$.
It can be seen that changes in colony size give a much greater increase in invasion probability than changes in colony number.
Note that this is the same data as Figure~\\ref{fig:plotValueChangeMeans} but with the $x$-axis scaled by population size, rather than relative parameter change.
'

transMeansTitle <- 'Comparison of the probability of the affect of colony size and number of groups on probability of invasion'

%%end.rcode

%%begin.rcode plotTransMeans, fig.cap = transMeansCapt, fig.scap = transMeansTitle, out.width = '0.4\\textwidth', fig.show = TRUE, cache = FALSE, fig.height = 3.5, fig.show = 'hide'

d2 <- rbind(dens1Means, dens2Means)
d2$transmission <- factor(d2$transmission, labels = c('beta == 0.1', '0.2', '0.3'))
densPreds$transmission <- factor(densPreds$transmission, labels = c('beta == 0.1', '0.2', '0.3'))


ggplot(d2, aes(x = pop, y = mean, colour = vary)) +
  geom_line(data = densPreds, aes(x = pop, y = pred, colour = vary)) +
  geom_point() +
  geom_errorbar(aes(ymin = lower, ymax = upper),
              width=.2) +
  ylab('Prop. Invasions') +
  xlab('Population size') +
  ylim(0, 1) +
  scale_colour_manual(name = "Focal Pop. factor", 
                      labels = c('Colony Size', 'Colony Number'), 
                      values = pokepal('Swampert', spread = 3)[2:1]) +
  scale_y_continuous(breaks = c(0, 0.5, 1), labels = c('0.0', '0.5', '1.0')) +
  scale_x_continuous(limits = c(0, 32000), 
                     breaks = c(0, 1e4, 2e4, 3e4), 
                     label = c('0', '10000', '20000', '30000')) +
  facet_grid(transmission ~ ., labeller = label_parsed) 

%%end.rcode

%%begin.rcode descriptive

meanDefault <- rbind(dens1, dens2, pop) %>%
                 filter(colonyNumber == 20, colonySize == 400, dens == 0.8, nExtantDis != 0) %>%
                 group_by(transmission) %>%
                 summarise(mean = mean(nExtantDis == 2))






transTest <- rbind(dens1, dens2, pop) %>%
               filter(colonyNumber == 20, colonySize == 400, dens == 0.8, nExtantDis != 0) %>%
               mutate(invasion = nExtantDis == 2) %>%
               glm(invasion ~ transmission, data = .) %>%
               tidy



nAllExtinct <- rbind(dens1, dens2, pop) %>%
                 filter(nExtantDis == 0) %>%
                 nrow


whichTransAllExtinct <- rbind(dens1, dens2, pop) %>%
                          filter(nExtantDis == 0) %>%
                          group_by(transmission) %>%
                          summarise(n = n())

transExtinctTest <- rbind(dens1, dens2, pop) %>%
                      mutate(doubleExtinct = nExtantDis == 0) %>%
                      glm(doubleExtinct ~ transmission, data = .) %>%
                      tidy



smallAllExtinct <- rbind(dens1, dens2, pop) %>%
                          filter(nExtantDis == 0, colonySize == 100) %>%
                          summarise(n = n())

fewAllExtinct <- rbind(dens1, dens2, pop) %>%
                          filter(nExtantDis == 0, colonyNumber == 5) %>%
                          summarise(n = n())


%%end.rcode


\subsection{Statistical analysis}


We combined the results from different simulations and fitted a logistic multipleregression model, centering and scaling the independent variables.
In \rinline{nAllExtinct} simulations, both of the pathogens went extinct.
The number of simulations where both pathogens went extinct did not depend on transmission rate (GLM: $b$ = \rinline{transExtinctTest$estimate[2]}, $p$ = \rinline{transExtinctTest$p.value[2]}).
However all of the simulations where extinction of both pathogens occurred had either the smallest colony size (colony size = 100, \rinline{smallAllExtinct} simulations) or the fewest number of groups (5 groups, \rinline{fewAllExtinct} simulations).
Results from these simulations were removed before further analyses.
We fitted the model 

\begin{align}
  \text{Invasion} = b_1 d + b_2 n + b_3 m + c + \epsilon
\end{align}
where $d, n$ and $m$ are density, colony size and number of groups, respectively, and $b_i$ are the regression coefficients. 
$c$ is a fitted intercept and $\epsilon$ is a binomially distributed error term.
To test the hypothesis that an increase in host population size creates a stronger increase in invasion probability (of the second pathogen) than an equal increase in host density we compared the size (and 95\% confidence intervals) of $b_1$ to $b_2$ and $b_3$.
To test the hypothesis that an increase in colony size creates a stronger increase in invasion probability than a proportionally equal increase in number of groups we compared $b_2$ to $b_3$.






%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\section{Results}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%     Results text    %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%todo where to put this.

At the default parameter settings, the probability of invasion and persistence of the second pathogen, $P(I)$,  was rare (Figure~\ref{fig:plotValueChangeMeans} and Tables~S2--4).
These proportions significantly increased with transmission rate (GLM: $b$ = \rinline{transTest$estimate[2]}, $p$ = \rinline{transTest$p.value[2]}).
This contradicts the deterministic model.


\subsection{Host population size or density}

Increasing host population size, either by increasing colony size or number of groups, increased the probability of invasion (Figure~\ref{fig:plotValueChangeMeans}, Table~\ref{t:regrCoefs}).
The relationship between colony size and invasion is strong and significant at all transmission rates, while the relationship between colony number and invasion is weaker and more marginally significant.
In contrast, varying host density does not alter invasion probability.
Therefore the simulations support the hypothesis that population size affects invasion more strongly than host density.


\subsection{Group size or number of groups}

Increasing either colony size or the number of groups increased the probability of invasion but this effect was much stronger and more statistically significant for colony size (Figure~S2, Table~\ref{t:regrCoefs}).
Therefore the simulations support the hypothesis that colony size is the more important component of population size. % discussion.
This is supported by the deterministic model that showed that Pathogen 2 can invade even in a single subpopulation.
As $R_0$ of the invading pathogen depends on the number of individuals in a subpopulation, invasion probability will increase with colony size.


\begin{table}
\captionsetup{width=0.9\textwidth}
\caption[Regression results]{
Regression results comparing effects of colony size, colony number and density.
Coefficient estimates ($b$) and 95\% confidence intervals of each variable are from multiple logistic regressions with invasion as the dependent variable and all independent variables being scaled and centred.
Colony size and colony number were varied while keeping density equal while density was varied by changing range size while keeping population size equal.
$p$ is for the test against the null hypothesis that  $b = 0$.
Results are given for three transmission values ($\beta$).
}
\label{t:regrCoefs}
\centering
\begin{tabular}{@{}rlrrr@{}}
\toprule
$\beta$ & \emph{Variable} & \emph{Estimate} ($b$) & (95\% \emph{CI}) & $p$\\
\midrule
0.1   &    Intercept     & \rinline{combModel$estimate[1]} & (\rinline{combModel$conf.low[1]}, \rinline{combModel$conf.high[1]}) & $< 10^{-5}$ \\
      &    Colony Size   & \rinline{combModel$estimate[2]} & (\rinline{combModel$conf.low[2]}, \rinline{combModel$conf.high[2]}) & $< 10^{-5}$ \\
      &    Colony Number & \rinline{combModel$estimate[3]} & (\rinline{combModel$conf.low[3]}, \rinline{combModel$conf.high[3]}) & \rinline{combModel$p.value[3]} \\
      &    Density       & \rinline{combModel$estimate[4]} & (\rinline{combModel$conf.low[4]}, \rinline{combModel$conf.high[4]}) & \rinline{combModel$p.value[4]} \\[1em]
0.2   &    Intercept     & \rinline{combModel$estimate[5]} & (\rinline{combModel$conf.low[5]}, \rinline{combModel$conf.high[5]}) & $< 10^{-5}$ \\
      &    Colony Size   & \rinline{combModel$estimate[6]} & (\rinline{combModel$conf.low[6]}, \rinline{combModel$conf.high[6]}) & $< 10^{-5}$ \\
      &    Colony Number & \rinline{combModel$estimate[7]} & (\rinline{combModel$conf.low[7]}, \rinline{combModel$conf.high[7]}) & \rinline{sprintf('%.3f', combModel$p.value[7])} \\
      &    Density       & \rinline{combModel$estimate[8]} & (\rinline{combModel$conf.low[8]}, \rinline{combModel$conf.high[8]}) & \rinline{combModel$p.value[8]} \\[1em]
0.3   &    Intercept     & \rinline{combModel$estimate[9]} & (\rinline{combModel$conf.low[9]}, \rinline{combModel$conf.high[9]}) & $< 10^{-5}$ \\
      &    Colony Size   & \rinline{combModel$estimate[10]} & (\rinline{combModel$conf.low[10]}, \rinline{combModel$conf.high[10]}) & $< 10^{-5}$ \\
      &    Colony Number & \rinline{combModel$estimate[11]} & (\rinline{combModel$conf.low[11]}, \rinline{combModel$conf.high[11]}) & \rinline{combModel$p.value[11]} \\
      &    Density       & \rinline{combModel$estimate[12]} & (\rinline{combModel$conf.low[12]}, \rinline{combModel$conf.high[12]}) & \rinline{combModel$p.value[12]} \\

\bottomrule

\end{tabular}
\end{table}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\section{Discussion}

%todo what are the four things i want to say.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%\tmpsection{Restate results}

Overall, our results suggest that population size promotes pathogen richness significantly more than host density in the context of metapopulations or group living.
Furthermore, the results suggest that the most important component of population size is colony size; a large population made up of large groups rather than many, small groups promotes pathogen invasion to the greatest degree.

These results lead to a number of other conclusions.
All else being equal, increasing range size (with density remaining constant) will not strongly increase pathogen richness unless the increased range size promotes larger groups.
Furthermore, social species that live in large groups are likely to harbour more pathogen species, even if the larger groups require more space and therefore dispersal between groups is reduced.

%\tmpsection{Why are these results like that? What do they mean?}
% Todo 

The results suggest that, for related, strongly competing strains, the factor that most strongly allows new pathogens to invade is the number of susceptible individuals in the local group.
As long as there are enough susceptible individuals that the new pathogen species does not go extinct during the stochastic, early stages of the epidemic, the new pathogen will persist.
As dispersal is a very slow process compared to infection, the global pool of susceptibles is not important. 
This is probably why increasing the number of groups did not increase pathogen invasion rate as quickly as the size of a colony did.
Similarly, the global host density of the species had little effect on pathogen invasion rate.
In these simulations, increasing density without increasing population size was only achieved by reducing range size; this simply increased the number of connections between groups in the metapopulation network.
This, in turn, increased the pool of susceptibles that were within one dispersal of the invading pathogen.
However, again, this effect was very weak compared to the strong changes in local disease dynamics caused by increasing colony size.

% todo Only two pathogens

%\subsection{Comparative studies}

Many comparative studies measure some aspect of a species population size or structure, yet it is rarely discussed how these are related.
Instead most studies use the data that are available, without considering \emph{a priori} how the explanatory variables are causally related (though statistical correlations between independent variables are usually considered and dealt with using PCA or by removing collinear variables).
Host density is often measured \cite{morand1998density, lindenfors2007parasite, nunn2003comparative, arneberg2002host} yet density is directly associated with population size.
Our results suggest that it is in fact population size that is important (in the context of social species as studied here).
This leads to the suggestion that the density measures in these comparative studies are in fact proxies for population size rather than the true causal factor.
Similarly, our results suggest that host range size does not promote pathogen richness by the mechanism studied here, yet a number of studies have found evidence of this relationship \cite{kamiya2014determines, nunn2003comparative}.
These differences suggest that either the relationship found in comparative studies is in fact due to a correlation with another factor, or that mechanisms other than probability of invasion of new pathogens are important.
Range size has been suggested to affect pathogen richness by a number of mechanisms such as increasing the number of sympatric species and these other mechanisms should be specifically tested \cite{luis2013comparison}.

The studies that have specifically tested the effect of group size have in fact found both positive \cite{vitone2004body} and negative associations \cite{gay2014parasite} or no relationship \cite{ezenwa2006host}.
Meta-analyses suggest that the relationship between social group size and pathogen richness is weak \cite{rifkin2012animals}.
However, we have found that group size is the most important population factor.
This suggests that the mechanism studied here --- invasion of recently evolved pathogens --- may not be the major mechanism by which pathogen richness is created in wild populations.



%\subsection{Assumptions and limitation}

%As a comparison is being made between the effects of range size and population size, the exact specifications of how the metapopulation is affected by range size is important.

%
%Furthermore, there is evidence that as groups become bigger, the within-group structure increases \cite{nunn2015infectious}.
%This has not been modelled here; instead the subpopulations are assumed to be fully mixed regardless of size.
%Also, we assumed that dispersal only occurs between colonies a certain distance apart.
%Based on \emph{a priori} considerations such as the time and energy required to disperse long distances, this is a reasonable assumption.
%The exact threshold was chosen to attempt to maximise the range of $\bar{k}$ studied (Figure~\ref{fig:plotK}).
%However, a similar assumption could be made in other ways.
%Instead of a threshold distance, individuals could be expected to disperse in a random direction and stop at the first colony they encounter; this could create some long distance links in the network and increase network connectivity, potentially reducing the effects of range size.
%Alternatively, the metapopulation could have been modelled as a weighted network with dispersal occurring at a higher rate to nearby colonies.
%Depending on the parameterisation of this distance-dispersal relationship, this could serve to increase the effect of range size --- by exaggerating dispersal to very nearby colonies --- or decrease the effect of range size by allowing rare, but significant, global dispersal creating a small-world network structure.
%Ultimately, the modelling choices could increase or decrease the effects of range size relative to colony size and the number of colonies but we aimed to make the effect of range size as strong as possible.
%



%\tmpsection{Further correlations between factors}
% Limitations of model. First half of first sentence should flag the point of the paragraph
We used the simple relationships between demographic factors --- $d = N / a$ for example --- to illustrate that these are tightly linked.
In order to isolate the effects of these factors we assumed that there are no further correlations between factors; to examine density without altering population size, we fixed population size and manipulated range size.
However, in reality, these factors are likely to covary in more complex ways, both within species across time and also between species.
Therefore, while these factors are certainly linked, they cannot be assumed to have simple, linear relationships and should not be used as proxies of each other without further examination.
For example, rates and distances of dispersal --- which affect the influence of space --- may be related to local density \cite{marjamaki2013local}.
Similarly it is unlikely that a species whose range size decreases will not experience a decrease in total population size as well; the range contraction is likely to occur over generations rather than a simple squeezing of the existing individuals into a smaller area.



%\subsection{Global change}

It is clear that many species are suffering strong population changes due to global change \cite{thomas2004extinction}.
However these changes might affect range size \cite{thomas2004extinction}, population size \cite{craigie2010large}, population connectivity \cite{wasserman2013population, rivera2015habitat, fonturbel2014forest} or group size \cite{lehmann2010apes, zunino2007habitat, manor2003impact, atwood2006influence} to different extents.
Our results suggest that pathogen communities will respond differently depending on which factors are most strongly affected by global change.
In short, species suffering reductions in groups size \cite{lehmann2010apes, zunino2007habitat, manor2003impact, atwood2006influence} are predicted to experience decreases in pathogen richness in the long term and there is some evidence that this process is occurring \cite{altizer2007threatened, turmelle2009correlates}.
Species that are experiencing increases in group size \cite{lehmann2010apes} would be expected to gain new pathogen species.
In contrast, species suffering range contractions \cite{thomas2004extinction} and decreases in population size \cite{craigie2010large} are expected to experience smaller changes in pathogen richness.
However, the monitoring of these different aspects of population change, especially in bats, can often be difficult and may require further developments in acoustic monitoring to be effective \cite{walters2013challenges, measey2016counting, lucas2015generalised}.

\section*{Data accessibility}
\sloppy
The implementation of the model is available as an R package on GitHub \cite{metapopepi}. This can be found at \href{https://github.com/timcdlucas/MetapopEpi}{https://github.com/timcdlucas/MetapopEpi}.
All code and simulation output data is available on GitHub at \href{https://github.com/timcdlucas/Abundance-Density-Manuscript}{https://github.com/timcdlucas/Abundance-Density-Manuscript}.
\fussy


\section*{Competing interests}
We have no competing interests.



\section*{Author's contributions}

TCDL wrote the simulations and performed the analysis.
TCDL, HMH and KEJ all helped design the study.
TCDL drafted the manuscript
TCDL, HMH and KEJ all edited the manuscript and gave final approval for publication.

\section*{Acknlowledgements}
We thank Andy Fenton and David Murrel for comments on the manuscript and help with the analytical model. 
The Dynamic Drivers of Disease in Africa Consortium, NERC project no. NE-J001570-1 was funded with support from the Ecosystem Services for Poverty Alleviation Programme (ESPA). 
The ESPA programme is funded by the Department for International Development (DFID), the Economic and Social Research Council (ESRC) and the Natural Environment Research Council (NERC)


\section*{Funding}
This study was funded through a CoMPLEX PhD studentship at University College London supported by BBSRC and EPSRC (TCDL). KEJ was funded by the Ecosystem Services for Poverty Alleviation Programme (ESPA) (NE-J001570-1).





\small
\printbibliography 

\end{document}



