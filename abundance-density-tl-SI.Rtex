%--------------------------------------------------------------------------------------------------------------------------------%
% Code for "Supplementary information: A mechanistic model to compare the importance of interrelated population measures: population size, population density and colony size"
% by Tim CD Lucas, Hilde Herbots and Kate Jones
%
%---------------------------------------------------------------------------------------------------------------------------------%


\documentclass[a4paper,10pt,reqno]{amsart}

\usepackage[T1]{fontenc}



\usepackage{graphicx}

\usepackage[width = 0.9\textwidth]{caption}
\usepackage{verbatim, geometry, fancyhdr,  graphicx, xcomment, microtype, array}
%\usepackage{amsmath}

\geometry{margin=1in}



\usepackage[
  backend=biber, 
  bibencoding=utf8, 
  useprefix=true,%
	uniquename=false, 
  uniquelist=false, %
	style=numeric-comp, 
  firstinits=true, 
	maxcitenames=2, 
  terseinits=true,
  maxbibnames=10
]{biblatex}
%\renewcommand{\cite}[1]{\footcite{#1}}
\renewcommand{\cite}[1]{\parencite{#1}}

\renewcommand*{\multicitedelim}{\addcomma}


\addbibresource{epilit.bib}
% This has to go below fontenc for some reason


\usepackage{booktabs}
\usepackage[pdftex,hidelinks]{hyperref}


\renewcommand\thefigure{S\arabic{figure}}    
\renewcommand\thetable{S\arabic{table}}    
\renewcommand\thesection{S\arabic{section}}    

\begin{document}


\title[Supplementary Material: Lucas et al.]{Supplementary material: A mechanistic model to compare the importance of interrelated population measures: host population size, density and colony size}
\author{Tim Lucas, Hilde Herbots and Kate Jones}
\date{}

\maketitle



%%begin.rcode settings, echo = FALSE, cache = FALSE, message = FALSE, results = 'hide', eval = TRUE

# There are figures created in the data analysis which are not in the final chapter document.
#   If TRUE, they will be included in the output.
#   Use 'hide' to remove them.
extraFigs <- 'hide'

#knitr options
#  Set figure prefix as A so that no figures will be overwritten.
opts_chunk$set(cache.path = '.SICache/', fig.path = 'figure')
source('misc/KnitrOptions.R')

# ggplot2 theme.
source('misc/theme_tcdl.R')
theme_set(theme_grey() + theme_tcdl)


library(xtable)
library(palettetown)
library(binom)
library(ggplot2)
library(dplyr)
%%end.rcode

\section{Supplementary methods}


\subsection{Stochastic simulations}

We examined the model using stochastic, continuous-time simulations implemented in \emph{R} \cite{R}.
The implementation is available as an \emph{R} package on GitHub \cite{metapopepi}.
The model can be written as a continuous-time Markov chain.
The Markov chain contains the random variables $((S_x)_{x = 1\ldots m}, (I_{x, q})_{x =1\ldots m,\:q \in \{1, 2, 12\}}, (R_x)_{x = 1\ldots m})$.
Here, $(S_x)_{x = 1\ldots m}$ is a length $m$ vector of the number of susceptibles in each colony.
$(I_{x, q})_{x =1\ldots m, q \in \{1, 2, 12\}}$ is a length $m \times 3$ vector describing the number of individuals of each disease class ($q \in \{1, 2, 12\}$) in each colony.
Finally, $(R_x)_{x = 1\ldots m}$ is a length $m$ vector of the number of individuals in the recovered class.
The model is a Markov chain where extinction of both pathogen species and extinction of the host species are absorbing states.
The expected time for either host to go extinct is much larger than the duration of the simulations.

At any time, suppose the system is in state $((s_x), (i_{x,q}), (r_x))$.
At each step in the simulation we calculate the rate at which each possible event might occur.
One event is then randomly chosen, weighted by its rate
\begin{align}
  p(\text{event } i) = \frac{e_i}{\sum_j e_j},
\end{align}
where $e_i$ is the rate at which event $i$ occurs and $\sum_j e_j$ is the sum of the rates of all possible events.
Finally, the length of the time step, $\delta$, is drawn from an exponential distribution 
\begin{align}
  \delta \sim \operatorname{Exp}\left(\sum_j e_j  \right).
\end{align}


We can now write down the rates of all events. 
Assuming asexual reproduction, that all classes reproduce at the same rate and that individuals are born into the susceptible class we get
\begin{align}
  s_x \rightarrow s_x + 1 \;\;\;\text{at a rate of}\;\; \Lambda\left( s_{x}+\sum_q i_{qx} + r_{x}\right) 
\end{align}
where $s_x \rightarrow s_x + 1$ is the event that the number of susceptibles in colony $x$ will increase by 1 (a single birth) and $\sum_q i_{qx}$ is the sum of all infection classes $q~\in~\{1, 2, 12\}$.
The rates of death, given a death rate $\mu$, and no increased mortality due to infection, are given by
\begin{align}
  s_x \rightarrow s_x-1  &\;\;\;\text{at a rate of}\;\; \mu s_x, \\
  i_{qx}  \rightarrow i_{qx}-1 &\;\;\text{at a rate of}\;\; \mu i_{qx},\\
  r_x  \rightarrow r_x-1 &\;\;\;\text{at a rate of}\;\; \mu r_x.
\end{align}



We modelled transmission as being density-dependent.
This assumption was more suitable than frequency-dependent transmission as we were modelling a disease transmitted by saliva or urine in highly dense populations confined to caves, buildings or potentially a small number of tree roosts.
We were notably not modelling a sexually transmitted disease (STD) as spillover of STDs from bats to humans is likely to be rare.
Infection of a susceptible with either Pathogen 1 or 2 is therefore given by
\begin{align}
  i_{1x} \rightarrow i_{1x}+1,\;\;\; s_x \rightarrow s_x-1 &\;\;\text{at a rate of}\;\; \beta s_x\left(i_{1x} + i_{12x}\right),\\
  i_{2x} \rightarrow i_{2x}+1,\;\;\; s_x \rightarrow s_x-1  &\;\;\text{at a rate of}\;\; \beta s_x\left(i_{2x} + i_{12x}\right),
\end{align}
while coinfection, given the coinfection adjustment factor $\alpha$, is given by
\begin{align}
  i_{12,x} \rightarrow i_{12,x}+1,\;\;\; i_{1x} \rightarrow i_{1x}-1 &\;\;\text{at a rate of}\;\; \alpha\beta i_{1x}\left(i_{2x} + i_{12x}\right),\\
  i_{12,x} \rightarrow i_{12,x}+1,\;\;\; i_{2x} \rightarrow i_{2x}-1 &\;\;\text{at a rate of}\;\; \alpha\beta i_{2x}\left(i_{1x} + i_{12x}\right).
\end{align}
Note that lower values of $\alpha$ give lower rates of coinfection as in \textcite{castillo1989epidemiological}.



The rate of migration from colony $y$ (with degree $k_y$) to colony $x$, given a dispersal rate $\xi$ is given by
\begin{align}
  s_x \rightarrow s_x+1,\;\;\; s_y \rightarrow s_y-1 &\;\;\text{at a rate of}\;\; \frac{\xi s_y}{k_y},\\
  i_{qx} \rightarrow i_{qx}+1,\;\;\; i_{qy} \rightarrow i_{qy}-1 &\;\;\text{at a rate of}\;\; \frac{\xi i_{qy}}{k_y},\\
  r_x \rightarrow r_x+1,\;\;\; r_y \rightarrow r_y-1 &\;\;\text{at a rate of}\;\; \frac{\xi r_y}{k_y}.
\end{align}
Note that the dispersal rate does not change with infection.
As above, this is due to the low virulence of bat viruses.
Finally, recovery from any infectious class occurs at a rate $\gamma$
\begin{align}
  i_{qx} \rightarrow i_{qx}-1,\;\; r_x \rightarrow r_x+1  \;\;\text{at a rate of}\;\; \gamma i_{qx}.
\end{align}


\clearpage
\section{Supplementary results}


\begin{table}[h!]
\captionsetup{width=.8\textwidth}
\centering
\caption{A summary of all symbols used along with their units and default values.
The justifications for parameter values are given in the main manuscript.}

\begin{tabular}{@{}lp{6cm}p{2.9cm}r@{}}
\toprule
Symbol & Explanation & Units & Value\\
\midrule
$\rho$ & Number of pathogens && 2\\
$x, y$ & Colony index &&\\
$p$ &  Pathogen index i.e.\ $p\in\{1,2\}$ for pathogens 1 and 2 & &\\
$q$ & Disease class i.e.\ $q\in\{1,2,12\}$&\\
$S_x$ & Number of susceptible individuals in colony $x$ &&\\
$I_{qx}$ & Number of individuals infected with disease(s) $q \in \{1, 2, 12\}$ in colony $x$ &&\\
$R_x$ & Number of individuals in colony $x$ in the recovered with immunity class  &&\\
$N$ & Total Population size && 30,000\\
$m$ & Number of colonies&& 10\\
$n$ & Colony size && 3,000\\
$a$ & Area & km\textsuperscript{2}& 10,000\\
$\beta$ & Transmission rate &  & 0.1 -- 0.4\\
$\alpha$ & Coinfection adjustment factor  & & 0.1\\
$\gamma$ & Recovery rate & year$^{-1}.$individual$^{-1}$ & 1\\
$\xi$ & Dispersal rate & year$^{-1}.$individual$^{-1}$ & 0.001--0.1\\
$\Lambda$ & Birth rate & year$^{-1}.$individual$^{-1}$ & 0.05\\
$\mu$ & Death rate & year$^{-1}.$individual$^{-1}$ & 0.05\\
$k_x$ & Degree of node $x$ (number of colonies that individuals from colony $x$ can disperse to). &&\\
$\delta$ & Waiting time until next event & years &\\

$e_i$ & The rate at which event $i$ occurs & year$^{-1}$&\\
\bottomrule
\end{tabular}

\label{t:params}
\end{table}




%%begin.rcode rawDataTables, cache = FALSE
dens1 <- read.csv('Data/DensSims.csv') %>% dplyr::select(-X)

dens1Means <- dens1 %>%
                filter(nExtantDis > 0) %>%
                group_by(transmission, colonySize, colonyNumber) %>%
                summarise(`Area \\tiny{($\\times 1000$ km$^2$)}` = mean(area / 1000),
                          `$N$ \\tiny{($\\times 1000$)}` = mean(as.numeric(as.character(pop)) / 1000) , 
                          `Density \\tiny{(km$^{-2}$)}`  = mean(as.numeric(as.character(pop))) / mean(as.numeric(as.character(area))),
                          Invasions = sum(nExtantDis == 2), 
                          Sims = n()) %>%
                rename(`$\\beta$` = transmission, `$n$` = colonySize, `$m$` = colonyNumber)


# Constant density, altered colony number

dens2 <- read.csv('Data/Dens2Sims.csv') %>% dplyr::select(-X)

dens2Means <- dens2 %>%
                filter(nExtantDis > 0) %>%
                group_by(transmission, colonySize, colonyNumber) %>%
                summarise(`Area \\tiny{($\\times 1000$ km$^2$)}` = mean(area / 1000),
                          `$N$ \\tiny{($\\times 1000$)}` = mean(as.numeric(as.character(pop)) / 1000) , 
                          `Density \\tiny{(km$^{-2}$)}`  = mean(as.numeric(as.character(pop))) / mean(as.numeric(as.character(area))),
                          Invasions = sum(nExtantDis == 2), 
                          Sims = n()) %>%
                rename(`$\\beta$` = transmission, `$n$` = colonySize, `$m$` = colonyNumber)

# Constant population, altered area

pop <- read.csv('Data/PopSims.csv') %>% dplyr::select(-X)

popMeans <- pop %>%
                filter(nExtantDis > 0) %>%
                group_by(transmission, area) %>%
                summarise(`$\\beta$` = mean(transmission),
                          `$n$` = mean(colonySize),
                          `$m$` = mean(colonyNumber),
                          `Area \\tiny{($\\times 1000$ km$^2$)}` = mean(area / 1000),
                          `$N$ \\tiny{($\\times 1000$)}` = mean(as.numeric(as.character(pop)) / 1000) , 
                          `Density \\tiny{(km$^{-2}$)}` = mean(as.numeric(as.character(pop))) / mean(as.numeric(as.character(area))),
                          Invasions = sum(nExtantDis == 2), 
                          Sims = n()) %>%
                ungroup %>%
                select(-area, -transmission)
%%end.rcode






% ----------------------------------------------- %
% Print tables
% ----------------------------------------------- %



%%begin.rcode pop, results = 'asis'


popTitle <- "
Raw data for range size simulations
  "

popCapt <- "
Raw data for range size simulations.
The population parameters are shown along with the number of invasions and the number of simulations.
Note that simulations where both pathogens went extinct have been removed (100 simulations were originally run for each parameter set).
$\\beta$ is the transmission rate, $n$ is colony size, $m$ is the number of colonies and $N$ is the total population size.
"


print(xtable(popMeans,
             caption = c(popCapt, popTitle), 
             label = "C-pop",
             digits = c(0, 1, 0, 0, 1, 0, 1, 0, 0),
             align = c('r', '@{}r', 'r', 'r', 'r', 'r', 'r', 'r', 'r@{}')), 
      size = "small", #Change size; useful for bigger tables
      include.rownames = FALSE, #Don't print rownames
      include.colnames = TRUE,
      sanitize.colnames.function = function(x){x},
      caption.placement = "top",
      booktabs = TRUE
    )

%%end.rcode


%%begin.rcode dens1, results = 'asis'


dens1Title <- "
Raw data for colony size simulations
  "

dens1Capt <- "
Raw data for colony size simulations. 
The population parameters are shown along with the number of invasions and the number of simulations.
Note that simulations where both pathogens went extinct have been removed (100 simulations were originally run for each parameter set).
$\\beta$ is the transmission rate, $n$ is colony size, $m$ is the number of colonies and $N$ is the total population size.
"


print(xtable(dens1Means,
             caption = c(dens1Capt, dens1Title), 
             label = "C-dens1",
             digits = c(0, 1, 0, 0, 1, 0, 1, 0, 0),
             align = c('r', '@{}r', 'r', 'r', 'r', 'r', 'r', 'r', 'r@{}')), 
      size = "small", #Change size; useful for bigger tables
      include.rownames = FALSE, #Don't print rownames
      include.colnames = TRUE,
      sanitize.colnames.function = function(x){x},
      caption.placement = "top",
      booktabs = TRUE
    )

%%end.rcode




%%begin.rcode dens2, results = 'asis'


dens2Title <- "
Raw data for number of colonies simulations
  "

dens2Capt <- "
Raw data for number of colonies simulations.
The population parameters are shown along with the number of invasions and the number of simulations.
Note that simulations where both pathogens went extinct have been removed (100 simulations were originally run for each parameter set).
$\\beta$ is the transmission rate, $n$ is colony size, $m$ is the number of colonies and $N$ is the total population size.
"


print(xtable(dens2Means,
             caption = c(dens2Capt, dens2Title), 
             label = "C-dens2",
             digits = c(0, 1, 0, 0, 1, 0, 1, 0, 0),
             align = c('r', '@{}r', 'r', 'r', 'r', 'r', 'r', 'r', 'r@{}')), 
      size = "small", #Change size; useful for bigger tables
      include.rownames = FALSE, #Don't print rownames
      include.colnames = TRUE,
      sanitize.colnames.function = function(x){x},
      caption.placement = "top",
      booktabs = TRUE
    )

%%end.rcode




%%begin.rcode plotKcapt

plotKcapt <- '
Change in average metapopulation network degree ($\\bar{k}$) with increasing range size. 
Bars show the median, boxes show the interquartile range, vertical lines show the range and grey dots indicate outlier values.
Notches indicate the 95\\% confidence interval of the median.
All simulations had 20 colonies, meaning 19 is the maximum value of $\\bar{k}$.
'

plotKtitle <- 'Change in average network degree with increasing range size'


%%begin.rcode plotK, fig.cap = plotKcapt, fig.scap = plotKtitle, out.width = '0.4\\textwidth', cache = FALSE, plot.height = 2.3, fig.show = TRUE, out.width = '0.9\\textwidth'

ggplot(dens1, aes(x = factor(area), y = meanK, colour = 'a', fill = 'a')) +
  geom_boxplot(outlier.size = 1, size = 0.3, outlier.colour = grey(0.3), 
    notch = TRUE, width = 0.4, notchwidth = 0.6) +
  scale_colour_manual(values = pokepal('vileplume')[4]) +
  scale_fill_manual(values = pokepal('vileplume')[7]) +
  stat_summary(geom = "crossbar", width = 0.2, fatten = 2, 
    fun.data = function(x){ return(c(y = median(x), ymin = median(x), ymax = median(x))) }) +
  theme(legend.position = 'none', panel.grid.major.x = element_blank()) + 
  scale_x_discrete(labels = c('2500', '5000', '10000', '20000', '40000')) +
  xlab(expression(paste('Area ', (km^2)))) +
  ylab(expression(paste('Mean degree, ', italic(bar(k))))) +
  ylim(0, 20)


%%end.rcode


%%begin.rcode transMeansCapt


transMeansCapt <- '
Comparison of the effect of host population size on probability of invasion when population size is altered by changing colony size or colony number.
Relationships are shown separately for each transmission value, $\\beta$.
It can be seen that changes in colony size give a much greater increase in invasion probability than changes in colony number.
Note that this is the same data as Figure~\\ref{fig:plotValueChangeMeans} but with the $x$-axis scaled by population size, rather than relative parameter change.
'

transMeansTitle <- 'Comparison of the probability of the affect of colony size and number of colonies on probability of invasion'

%%end.rcode

%%begin.rcode plotTransMeans, fig.cap = transMeansCapt, fig.scap = transMeansTitle, out.width = '0.9\\textwidth', fig.show = TRUE, cache = FALSE, fig.height = 3.5, fig.show = TRUE


dens1 <- read.csv('Data/DensSims.csv') %>% dplyr::select(-X)

dens1Means <- dens1 %>%
                filter(nExtantDis > 0) %>%
                group_by(transmission, colonySize, colonyNumber) %>%
                summarise(success = sum(nExtantDis == 2), sampleSize = n(), pop = mean(as.numeric(as.character(pop))))


dens1Means <- dens1Means %>%
                cbind(., vary = 'colonySize', binom.confint(.$success, .$sampleSize, conf.level = 0.95, methods = "exact"))

# fit glms to each transmission value

dens1Model <- dens1 %>%
               filter(nExtantDis > 0) %>%
               mutate(invasion = as.numeric(nExtantDis == 2)) %>%
               group_by(transmission) %>%
               do(fit = glm(invasion ~ pop, data = ., family = 'binomial')) %>%
               mutate(vary = 'colonySize')


# Constant density, altered colony number

dens2 <- read.csv('Data/Dens2Sims.csv') %>% dplyr::select(-X)

dens2Means <- dens2 %>%
                filter(nExtantDis > 0) %>%
                group_by(transmission, colonySize, colonyNumber) %>%
                summarise(success = sum(nExtantDis == 2), sampleSize = n(), pop = mean(as.numeric(as.character(pop))))


dens2Means <- dens2Means %>%
                cbind(., vary = 'colonyNumber',  binom.confint(.$success, .$sampleSize, conf.level = 0.95, methods = "exact"))

# Fit glms to each transmission value
dens2Model <- dens2 %>%
               filter(nExtantDis > 0) %>%
               mutate(invasion = as.numeric(nExtantDis == 2)) %>%
               group_by(transmission) %>%
               do(fit = glm(invasion ~ pop, data = ., family = 'binomial')) %>%
               mutate(vary = 'colonyNumber')



popPred <- seq(min(dens2$pop), max(dens2$pop), length.out = 200)

densPreds <- rbind(dens1Model, dens2Model) %>%
               apply(., 1, 
                 function(m) predict(m['fit'][[1]], newdata = data.frame(pop = popPred), type = 'response') %>%
                               data.frame(pred = ., pop = popPred, transmission = m$transmission, vary = m$vary)
               ) %>%
               do.call(rbind, .)


d2 <- rbind(dens1Means, dens2Means)
d2$transmission <- factor(d2$transmission, labels = c('beta == 0.1', '0.2', '0.3'))
densPreds$transmission <- factor(densPreds$transmission, labels = c('beta == 0.1', '0.2', '0.3'))


ggplot(d2, aes(x = pop, y = mean, colour = vary)) +
  geom_line(data = densPreds, aes(x = pop, y = pred, colour = vary)) +
  geom_point() +
  geom_errorbar(aes(ymin = lower, ymax = upper),
              width=.2) +
  ylab('Prop. Invasions') +
  xlab('Population size') +
  ylim(0, 1) +
  scale_colour_manual(name = "Focal Pop. factor", 
                      labels = c('Colony Size', 'Colony Number'), 
                      values = pokepal('Swampert', spread = 3)[2:1]) +
  scale_y_continuous(breaks = c(0, 0.5, 1), labels = c('0.0', '0.5', '1.0')) +
  scale_x_continuous(limits = c(0, 32000), 
                     breaks = c(0, 1e4, 2e4, 3e4), 
                     label = c('0', '10000', '20000', '30000')) +
  facet_grid(transmission ~ ., labeller = label_parsed) 

%%end.rcode


\end{document}


